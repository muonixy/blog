---
import { tick } from "svelte";
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import MainGridLayout from "../layouts/MainGridLayout.astro";

// 追番数据
const animeList = [
	{
		title: "CLANNAD",
		status: "completed",
		rating: 9.9,
		cover: "https://i.mji.rip/2025/09/18/b79fd7b49afe4c7db1dffe00cf9ebc1b.webp",
		description: "冈崎朋也因家庭因素成为不良少年，一直与春原阳平为伍，在光坂高校过着潦倒的生活，但希望终有一天能够离开所在的小镇。某一天，他在学校坡道前发现了一个止步不前的女孩，在朋也认识了这个名为“古河渚”的女孩后，他的生活开始有了重大的变化。",
		episodes: "23 episodes",
		year: "2007",
		genre: ["校园", "治愈"],
		studio: "Kyoto Animation",
		link: "https://www.bilibili.com/bangumi/media/md1177",
		progress: 23,
		totalEpisodes: 23,
		startDate: "2007年10月4日",
		endDate: " 2008年3月27日",
	},
	{
		title: "CLANNAD ～AFTER STORY～",
		status: "completed",
		rating: 9.9,
		cover: "https://i.mji.rip/2025/09/18/31a625a5c71401197dec4e763a9803ea.webp",
		description: "在某个小镇，主角冈崎朋也因家庭因素成为不良少年，一直与春原阳平为伍，在光坂高校过着潦倒的生活，但冀望终有一天能够离开所在的小镇。某一天，他在学校坡道前发现了一个止步不前的女孩，在朋也认识了这个名为“古河渚”的女孩后，他的生活开始有了重大的变化。",
		episodes: "23 episodes",
		year: "2008",
		genre: ["校园", "治愈"],
		studio: "Kyoto Animation",
		link: "https://www.bilibili.com/bangumi/media/md1178",
		progress: 23,
		totalEpisodes: 23,
		startDate: "2008年10月2日",
		endDate: "2009年3月26日",
	},
	{
		title: "AIR (エアー)",
		status: "completed",
		rating: 9.8,
		cover: "https://i.mji.rip/2025/09/18/a3d9a66d7a14dce7a5ada83160b32325.webp",
		description: "在一个风和日丽的夏天，旅人来到一个小镇，寻找传说中的“会飞的女孩”。在旅人的回忆中，他想起了三年前的夏天，那时他遇见了一个神秘的少女，她有着与众不同的气质和能力。旅人决定留在小镇，寻找那个神秘的女孩，并揭开她背后的秘密。",
		episodes: "12 episodes",
		year: "2005",
		genre: ["日常", "治愈"],
		studio: "Kyoto Animation",
		link: "https://www.bilibili.com/bangumi/media/md1816",
		progress: 12,
		totalEpisodes: 12,
		startDate: "2005年1月6日",
		endDate: "2005年3月24日",
	},
	{
		title: "Kanon (2006)",
		status: "completed",
		rating: 9.7,
		cover: "https://i.mji.rip/2025/09/18/65582a2fb70287c0c2879b048115570f.webp",
		description: "主人公相泽祐一在七年前的冬天离开了小镇，搬到了城市。七年后，他因为某些原因回到了小镇，并重新遇见了童年时的朋友们。在与这些朋友们的相处中，祐一逐渐发现了她们各自隐藏的秘密和过去的伤痛，同时也重新找回了自己内心的温暖和希望。",
		episodes: "24 episodes",
		year: "2006",
		genre: ["校园", "治愈"],
		studio: "Kyoto Animation",
		link: "https://www.bilibili.com/bangumi/media/md1375",
		progress: 24,
		totalEpisodes: 24,
		startDate: "2006年10月5日",
		endDate: "2007年3月22日",
	},
	{
		title: "Rewrite (リライト)",
		status: "completed",
		rating: 9.5,
		cover: "https://i.mji.rip/2025/09/18/c2e45274dc889bda0b00d42270102b5b.webp",
		description: "故事发生在一个名为风祭的城市，主人公天王寺瑚太朗是一个普通的高中生，过着平凡的生活。然而，他的生活在遇见了神秘的少女小鸟游六花后发生了巨大的变化。六花告诉瑚太朗，他拥有一种特殊的能力，可以“重写”现实。随着故事的发展，瑚太朗逐渐发现了风祭城市背后隐藏的秘密，以及自己与六花之间复杂的关系。",
		episodes: "13 episodes",
		year: "2016",
		genre: ["校园", "奇幻"],
		studio: "Key",
		link: "https://www.bilibili.com/bangumi/media/md5020",
		progress: 13,
		totalEpisodes: 13,
		startDate: "2016年7月2日",
		endDate: "2016年9月24日",
	},
	{
		title: "Rewrite 2nd Season (リライト 2ndシーズン)",
		status: "completed",
		rating: 9.5,
		cover: "https://i.mji.rip/2025/09/18/8ceeb4e86a1d4f9d75890fd29d6cfd0d.webp",
		description: "故事继续围绕天王寺瑚太朗和小鸟游六花展开，揭示了更多关于风祭城市的秘密和瑚太朗的能力。在第二季中，瑚太朗面临着更大的挑战和危险，他必须与其他拥有特殊能力的人展开对抗，同时也要保护自己所珍视的人。随着剧情的发展，瑚太朗逐渐理解了自己的使命和责任，并最终决定为了保护风祭城市而战斗。",
		episodes: "12 episodes",
		year: "2017",
		genre: ["校园", "奇幻"],
		studio: "Key",
		link: "https://www.bilibili.com/bangumi/media/md5806",
		progress: 13,
		totalEpisodes: 13,
		startDate: "2017年1月14日",
		endDate: "2017年3月25日",
	},
	{
		title: "Charlotte (シャーロット)",
		status: "completed",
		rating: 9.5,
		cover: "https://i.mji.rip/2025/09/18/29049ed230e71a298c14bfef841bfafa.webp",
		description: "故事发生在一个拥有特殊能力的少年少女们的世界，主人公乙坂有宇是一个拥有“夺取他人能力”能力的少年。他在一次意外中遇见了同样拥有特殊能力的少女友利奈绪，并加入了一个由能力者组成的学生会。学生会的成员们利用自己的能力帮助有需要的人，同时也面临着各种挑战和危险。在与其他能力者的对抗中，有宇逐渐发现了自己能力的真正意义和责任。",
		episodes: "13 episodes",
		year: "2015",
		genre: ["校园", "奇幻"],
		studio: "P.A.Works",
		link: "https://www.bilibili.com/bangumi/media/md2323",
		progress: 13,
		totalEpisodes: 13,
		startDate: "2015年7月4日",
		endDate: "2015年9月26日",
	},
	{
		title: "Angel Beats! (エンジェルビーツ)",
		status: "completed",
		rating: 9.8,
		cover: "https://i.mji.rip/2025/09/18/1ca0294c46558a2706e669685bfef3ae.webp",
		description: "故事发生在一个名为“死后世界”的地方，主人公音无结弦在一次意外中失去了记忆，醒来后发现自己身处于一个高中校园，并且周围的学生们都在与一个神秘的少女天使进行战斗。结弦加入了反抗军，与天使展开了一场激烈的战斗，同时也逐渐揭开了这个世界的真相。",
		episodes: "13 episodes",
		year: "2010",
		genre: ["校园", "奇幻"],
		studio: "P.A.Works",
		link: "https://www.bilibili.com/bangumi/media/md959",
		progress: 13,
		totalEpisodes: 13,
		startDate: "2010年4月3日",
		endDate: "2010年6月26日",
	},
	{
		title: "ReLIFE",
		status: "completed",
		rating: 9.9,
		cover: "https://i.mji.rip/2025/09/18/4decca17505c20743d57aea6952b05a4.webp",
		description: "故事讲述了一个27岁的失业青年海崎新太，他因为生活的压力和挫折而感到迷茫和无助。一天，他遇见了一个神秘的组织“ReLIFE”，并被邀请参加一个实验项目，通过服用一种药物，他可以回到高中时代，重新体验青春和校园生活。在新的高中生活中，新太结识了许多朋友，并逐渐找回了自信和勇气，同时也开始思考自己的人生方向。",
		episodes: "13 episodes",
		year: "2016",
		genre: ["校园", "治愈"],
		studio: "TMS Entertainment",
		link: "https://www.bilibili.com/bangumi/media/md28229193",
		progress: 13,
		totalEpisodes: 13,
		startDate: "2016年7月2日",
		endDate: "2016年9月24日",
	}
];

// 获取状态的翻译文本和样式
function getStatusInfo(status: string) {
	switch (status) {
		case "watching":
			return {
				text: i18n(I18nKey.animeStatusWatching),
				class:
					"bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300",
				icon: "▶",
			};
		case "completed":
			return {
				text: i18n(I18nKey.animeStatusCompleted),
				class:
					"bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300",
				icon: "✓",
			};
		case "planned":
			return {
				text: i18n(I18nKey.animeStatusPlanned),
				class:
					"bg-amber-100 text-amber-700 dark:bg-amber-900/30 dark:text-amber-300",
				icon: "⏰",
			};
		default:
			return {
				text: status,
				class: "bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300",
				icon: "?",
			};
	}
}

// 计算统计数据
const stats = {
	total: animeList.length,
	watching: animeList.filter((anime) => anime.status === "watching").length,
	completed: animeList.filter((anime) => anime.status === "completed").length,
	avgRating: (
		animeList.reduce((sum, anime) => sum + anime.rating, 0) / animeList.length
	).toFixed(1),
};
---

<MainGridLayout title={i18n(I18nKey.anime)} description={i18n(I18nKey.animeSubtitle)}>
	<div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
		<div class="card-base z-10 px-9 py-6 relative w-full">
			<!-- 页面标题 -->
			<div class="relative w-full mb-8">
				<div class="mb-6">
					<h1 class="text-4xl font-bold text-black/90 dark:text-white/90 mb-2">{i18n(I18nKey.animeTitle)}</h1>
					<p class="text-black/75 dark:text-white/75">{i18n(I18nKey.animeSubtitle)}</p>
				</div>
				
				<!-- 统计卡片 -->
				<div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
					<div class="bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">📊</div>
							<div>
								<div class="text-2xl font-bold text-blue-600 dark:text-blue-400">{stats.total}</div>
								<div class="text-sm text-blue-600/70 dark:text-blue-400/70">{i18n(I18nKey.animeTotal)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">▶️</div>
							<div>
								<div class="text-2xl font-bold text-green-600 dark:text-green-400">{stats.watching}</div>
								<div class="text-sm text-green-600/70 dark:text-green-400/70">{i18n(I18nKey.animeWatching)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">✅</div>
							<div>
								<div class="text-2xl font-bold text-purple-600 dark:text-purple-400">{stats.completed}</div>
								<div class="text-sm text-purple-600/70 dark:text-purple-400/70">{i18n(I18nKey.animeCompleted)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">⭐</div>
							<div>
								<div class="text-2xl font-bold text-orange-600 dark:text-orange-400">{stats.avgRating}</div>
								<div class="text-sm text-orange-600/70 dark:text-orange-400/70">{i18n(I18nKey.animeAvgRating)}</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- 动漫列表 -->
			<div class="mb-8">
				<h2 class="text-2xl font-bold text-black/90 dark:text-white/90 mb-4">
					{i18n(I18nKey.animeList)}
				</h2>
				<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 md:gap-6">
					{animeList.map(anime => {
						const statusInfo = getStatusInfo(anime.status);
						const progressPercent = (anime.progress / anime.totalEpisodes) * 100;
						
						return (
							<div class="group relative bg-[var(--card-bg)] border border-[var(--line-divider)] rounded-[var(--radius-large)] overflow-hidden transition-all duration-300 hover:shadow-lg hover:scale-[1.02]">
								<!-- 封面区域 - 竖屏比例 -->
								<div class="relative aspect-[2/3] overflow-hidden">
									<a href={anime.link} target="_blank" rel="noopener noreferrer" class="block w-full h-full">
										<ImageWrapper 
											src={anime.cover} 
											alt={anime.title}
											class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
										/>
										<div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
											<div class="absolute inset-0 flex items-center justify-center">
												<div class="w-12 h-12 rounded-full bg-white/90 flex items-center justify-center">
													<svg class="w-6 h-6 text-gray-800 ml-1" fill="currentColor" viewBox="0 0 24 24">
														<path d="M8 5v14l11-7z"/>
													</svg>
												</div>
											</div>
										</div>
									</a>
									
									<!-- 状态标签 -->
									<div class={`absolute top-2 left-2 px-2 py-1 rounded-md text-xs font-medium ${statusInfo.class}`}>
										<span class="mr-1">{statusInfo.icon}</span>
										<span>{statusInfo.text}</span>
									</div>
									
									<!-- 评分 -->
									<div class="absolute top-2 right-2 bg-black/70 text-white px-2 py-1 rounded-md text-xs font-medium flex items-center gap-1">
										<svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
											<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
										</svg>
										<span>{anime.rating}</span>
									</div>
									
									<!-- 进度条 - 在封面底部 -->
									{anime.status === 'watching' && (
										<div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-2">
											<div class="w-full bg-white/20 rounded-full h-1.5 mb-1">
												<div class="bg-gradient-to-r from-emerald-400 to-teal-400 h-1.5 rounded-full transition-all duration-300" style={`width: ${progressPercent}%`}></div>
											</div>
											<div class="text-white text-xs font-medium">
												{anime.progress}/{anime.totalEpisodes} ({Math.round(progressPercent)}%)
											</div>
										</div>
									)}
								</div>
								
								<!-- 内容区域 - 紧凑设计 -->
								<div class="p-3">
									<h3 class="text-sm font-bold text-black/90 dark:text-white/90 mb-1 line-clamp-2 leading-tight">{anime.title}</h3>
									<p class="text-black/60 dark:text-white/60 text-xs mb-2 line-clamp-2">{anime.description}</p>
									
									<!-- 详细信息 - 更紧凑 -->
									<div class="space-y-1 text-xs">
										<div class="flex justify-between">
												<span class="text-black/50 dark:text-white/50">{i18n(I18nKey.animeYear)}</span>
											<span class="text-black/70 dark:text-white/70">{anime.year}</span>
										</div>
										<div class="flex justify-between">
												<span class="text-black/50 dark:text-white/50">{i18n(I18nKey.animeStudio)}</span>
											<span class="text-black/70 dark:text-white/70 truncate ml-2">{anime.studio}</span>
										</div>
										<div class="flex flex-wrap gap-1 mt-2">
											{anime.genre.map(g => (
												<span class="px-1.5 py-0.5 bg-[var(--btn-regular-bg)] text-black/70 dark:text-white/70 rounded text-xs">{g}</span>
											))}
										</div>
									</div>
								</div>
							</div>
						);
					})}
				</div>
			</div>
		</div>
	</div>
</MainGridLayout>